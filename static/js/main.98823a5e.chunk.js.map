{"version":3,"sources":["Components/PhoneBook/PhoneBook.module.css","Redux/Contacts/actions.js","Components/PhoneBook/PhoneBook.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","App.js","Redux/Contacts/reducer.js","Redux/Contacts/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContact","PhoneBook","state","contacts","nameInputId","numberInputId","handleChange","event","setState","currentTarget","value","handleForm","preventDefault","props","find","contact","alert","onSubmit","this","className","styles","label","htmlFor","type","onChange","button","Component","connect","dispatch","actions","ContactItem","onRemove","onClick","map","console","log","filter","target","placeholder","items","createReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98823a5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhoneBook_form__2YY1l\",\"label\":\"PhoneBook_label__31IGQ\",\"button\":\"PhoneBook_button__1FGx3\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nexport const addContact = createAction('contact/add', (name, number) => {\r\n    return {\r\n        payload: {\r\n            id: shortid.generate(),\r\n            name,\r\n            number\r\n        }\r\n    }\r\n})\r\n\r\nexport const deleteContact = createAction('contact/delete') \r\n\r\nexport const filterContact = createAction('contact/filter')","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport shortid from 'shortid';\r\nimport styles from './PhoneBook.module.css';\r\nimport * as actions from '../../Redux/Contacts/actions';\r\n\r\n\r\nclass PhoneBook extends Component  {\r\n    \r\n    state = {\r\n        contacts: [],\r\n        name: '',\r\n        number: '',        \r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.currentTarget.name]: event.currentTarget.value });        \r\n    }\r\n    \r\n    handleForm = event => {\r\n        event.preventDefault();\r\n        const { name } = this.state;\r\n        const { contacts } = this.props;\r\n        if (contacts.find(contact => contact.name === name)) {\r\n            return alert(`${name} is already in contacts.`);\r\n        }\r\n        this.props.onSubmit({ id: shortid.generate(), ...this.state });\r\n        this.setState({            \r\n            name: '',\r\n            number: '',\r\n        }); \r\n    }\r\n\r\n    render() {        \r\n        return (            \r\n                <form onSubmit={this.handleForm} className=\"form\">\r\n                   <label className={styles.label} htmlFor={this.nameInputId} >Name\r\n                       <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange} \r\n                        id={this.nameInputId}\r\n                       ></input>\r\n                   </label>\r\n                   <label className={styles.label} htmlFor={this.numberInputId}>Number   \r\n                       <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        id={this.numberInputId}\r\n                       ></input>\r\n                    </label>\r\n                    <button \r\n                        type=\"submit\"\r\n                        className={styles.button}                        \r\n                    >Add contact</button>\r\n                </form>            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n  return {\r\n    contacts: state.contacts.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: ({ name, number  }) => dispatch(actions.addContact( name, number ))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\r\n\r\n\r\n    ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/Contacts/actions';\r\n\r\nconst ContactItem = ({ id, name, number, onRemove }) => {  \r\n  return (\r\n    <li id={id}>\r\n      <span>{name}</span>: <span>{number}</span>\r\n      <button type=\"button\" id={id} onClick={() => onRemove(id)} >Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Contacts = ({ contacts, onRemove } ) => {  \r\n  \r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (        \r\n          <ContactItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onRemove={onRemove}\r\n          />                  \r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\n\r\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n//   contacts: items.filter(\r\n//     ({ name }) => name && name.toLowerCase().includes(filter.toLowerCase()),\r\n//   ),\r\n// });\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: (id) => dispatch(actions.deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport shortid from 'shortid';\r\nimport * as actions from '../../Redux/Contacts/actions';\r\n\r\nconst nameInputId = shortid.generate();\r\n\r\nconst Filter = ({ value, onChange }) => {  \r\n  return (\r\n    <div>\r\n      <h3>Find contacts by name</h3>\r\n      <input        \r\n        type=\"text\"\r\n        placeholder=\"Search contact\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n        id={nameInputId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state.contacts.filter)\r\n  return {\r\n    value: state.contacts.filter,    \r\n  };  \r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(actions.filterContact(event.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport PhoneBook from './Components/PhoneBook/PhoneBook';\nimport Contacts from './Components/Contacts/Contacts';\nimport Filter from './Components/Filter/Filter';\nimport { connect } from 'react-redux';\n\n// class App extends Component {\n//   state = {\n//     // contacts: [\n//     //   {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     //   {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n//     //   {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n//     //   {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n//     // ],    \n//     // filter: ''\n//   }\n\n//   // formSubmitHandler = ({name, number}) => {\n//   //   const contact = {\n//   //     id: shortid.generate(),\n//   //     name,\n//   //     number\n//   //   };\n\n//   //   const inContacts = this.state.contacts.find(\n//   //           item => item.name === contact.name,\n//   //       );\n//   //       if (inContacts !== undefined) {\n//   //           alert(`${contact.name} is already in contacts`);        \n//   //       return;\n//   //       } \n//   //      this.setState(({ contacts }) => ({\n//   //     contacts: [contact, ...contacts],\n//   //   }));     \n//   // }\n\n//   // handleRemoveContact = (id) => \n//   //   this.setState(({ contacts }) => ({ contacts: contacts.filter(contact => contact.id !== id) }))\n  \n//   filterChange = event => {\n//     this.setState({\n//       filter: event.currentTarget.value,\n//     });\n//   };\n\n//   // getfilteredContacts = () => {\n//   //   const { contacts, filter } = this.state;\n\n//   //   const normalizedFilter = filter.toLowerCase();\n//   //   return contacts.filter(contact => {\n//   //     return contact.name.toLowerCase().includes(normalizedFilter);\n//   //   });\n//   // };\n\n//   // componentDidMount() {\n    \n//   //   const contacts = localStorage.getItem('contacts');\n//   //   const parsedContacts = JSON.parse(contacts);\n\n//   //   if (parsedContacts) {\n//   //     this.setState({ contacts: parsedContacts });\n//   //   }    \n//   // }\n\n//   // componentDidUpdate(prevProps, prevState) {    \n//   //   if (this.state.contacts !== prevState.contacts) {\n//   //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//   //   }\n//   // }\n  \n  \n//   render() {    \n//     const { filter } = this.state;\n//     // const filteredContacts = this.getfilteredContacts();\n    \n//     return (\n//       <div>\n//         <Title title='Phonebook'/>\n//         <PhoneBook onSubmit={this.formSubmitHandler} />\n//         <Title title='Contacts' />\n//         <Filter\n//           value={filter}\n//           onChange={this.filterChange}\n//         />\n//         <Contacts />\n//         {/* <Contacts\n//           filteredContacts={filteredContacts}\n//           onRemove={this.handleRemoveContact}          \n//         />         */}\n//       </div>      \n//     )\n//   }\n// }\n\nfunction App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <PhoneBook />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </>\n  )\n}\n\nconst mapStateToProps = ({ contacts: { items } }) => ({\n  contacts: items,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./actions\";\r\n\r\nconsole.log(actions)\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n]\r\n\r\n\r\nconst contacts = createReducer(initialState, {  \r\n'contact/add': (state, {payload}) => [...state, payload],\r\n'contact/delete': (state, {payload}) =>\r\n  state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\n\r\nconst filter = createReducer(\"\", {\r\n  'contact/filter': (state, {payload}) => payload,\r\n});\r\n\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './reducer';\r\n\r\nconst store = configureStore({\r\n    reducer: { contacts: reducer },\r\n    devTools: process.env.NODE_ENV === 'development'\r\n})    \r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './Redux/Contacts/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>      \n    </BrowserRouter>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}